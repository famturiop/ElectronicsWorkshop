// <auto-generated />
using ElectronicsWorkshop.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElectronicsWorkshop.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CompositeDeviceConnector", b =>
                {
                    b.Property<int>("CompositeDevicesId")
                        .HasColumnType("int");

                    b.Property<int>("ConnectorsId")
                        .HasColumnType("int");

                    b.HasKey("CompositeDevicesId", "ConnectorsId");

                    b.HasIndex("ConnectorsId");

                    b.ToTable("CompositeDeviceConnector");
                });

            modelBuilder.Entity("ElectronicsWorkshop.Core.Domain.Models.BaseDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BaseDevices");
                });

            modelBuilder.Entity("ElectronicsWorkshop.Core.Domain.Models.CompositeDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BasisId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BasisId");

                    b.ToTable("CompositeDevices");
                });

            modelBuilder.Entity("ElectronicsWorkshop.Core.Domain.Models.Connector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Connectors");
                });

            modelBuilder.Entity("CompositeDeviceConnector", b =>
                {
                    b.HasOne("ElectronicsWorkshop.Core.Domain.Models.CompositeDevice", null)
                        .WithMany()
                        .HasForeignKey("CompositeDevicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElectronicsWorkshop.Core.Domain.Models.Connector", null)
                        .WithMany()
                        .HasForeignKey("ConnectorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ElectronicsWorkshop.Core.Domain.Models.CompositeDevice", b =>
                {
                    b.HasOne("ElectronicsWorkshop.Core.Domain.Models.BaseDevice", "Basis")
                        .WithMany("CompositeDevices")
                        .HasForeignKey("BasisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basis");
                });

            modelBuilder.Entity("ElectronicsWorkshop.Core.Domain.Models.BaseDevice", b =>
                {
                    b.Navigation("CompositeDevices");
                });
#pragma warning restore 612, 618
        }
    }
}
